$units: 1px !default;

@mixin screen($res-first, $res-last: $res-first) {
  @if $res-first == $res-last {
    @media screen and (max-width: if(unitless($res-first), $res-first*$units, $res-first)) {
      @content;
    }
  } @else if $res-first < $res-last {
    @media screen and (min-width: if(unitless($res-first), $res-first*$units, $res-first)) and (max-width: if(unitless($res-last), $res-last*$units, $res-last)) {
      @content;
    }
  }
}

@mixin min-screen($res) {
  @media screen and (min-width: if(unitless($res), $res*$units, $res)) {
    @content;
  }
}

$sizes: (
  xs: 0.25rem,
  s: 0.5rem,
  m: 1rem,
  l: 1.5rem,
  xl: 2rem,
  xxl: 5rem,
);

@mixin gutters() {
  @each $name, $size in $sizes {
    &.gutter-#{$name} > *:not(:first-child) {
      margin-left: $size;
    }
  }
}

@mixin margins() {
  $sides: (
    t: top,
    r: right,
    b: bottom,
    l: left,
  );
  @each $name, $size in $sizes {
    .m-#{$name} {
      margin: $size !important;
    }

    @each $abbr, $side in $sides {
      .m#{$abbr}-#{$name} {
        margin-#{$side}: $size !important;
      }
    }
  }
}

@include margins();

@mixin grid($columns: 3) {
  display: flex;
  flex-wrap: wrap;

  > * {
    box-sizing: border-box;
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: calc(100% / #{$columns});
    max-width: calc(100% / #{$columns});
  }

  @each $name, $size in $sizes {
    &.gutter-#{$name} {
      margin: calc((-1 * #{$size}) / 2);

      > * {
        padding: calc(#{$size} / 2);
      }
    }
  }
}

@mixin aspect-ratio($width, $height) {
  position: relative;

  &::before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

.flex-container {
  display: flex;
  justify-content: space-between;
  align-items: center;

  @include screen($wMobile) {
    flex-direction: column;
  }

  @include gutters();

  &:not(.no-expand) > * {
    flex: 1;
  }

  &.start {
    justify-content: flex-start;
  }

  &.left {
    align-items: flex-start;
  }

  &.right {
    align-items: flex-end;
  }

  &.stretch {
    align-items: stretch;
  }

  &.column {
    flex-direction: column;
  }
}

.text-uppercase {
  text-transform: uppercase;
}

.flex-column-on-mobile {
  @include screen($wMobile) {
    flex-direction: column;
  }
}

#fix-margin-top-250-on-desktop {
  margin-top: -250px;

  @include screen($wMobile) {
    margin-top: auto;
  }
}

.aspect-ratio-16-9 {
  @include aspect-ratio(16, 9);
}
